dl_0                            = 0x01001860; // size:0x28
dl_1                            = 0x01001888; // size:0xE0
osTvType                        = 0x80000300;
osRomBase                       = 0x80000308;
osResetType                     = 0x8000030C;
osAppNMIBuffer                  = 0x8000031C;
boot                            = 0x8004B450; // type:func size:0x64 (global, .text, src/main.c)
idle                            = 0x8004B4B4; // type:func size:0xAC (global, .text, src/main.c)
copyfromrom                     = 0x8004B560; // type:func size:0xF0 (global, .text, src/main.c)
determineclockfreq              = 0x8004B650; // type:func size:0xB4 (global, .text, src/main.c)
func_8004B704                   = 0x8004B704; // type:func size:0xD0 (global, .text, src/main.c)
func_8004B7D4                   = 0x8004B7D4; // type:func size:0xBC (global, .text, src/main.c)
display                         = 0x8004B890; // type:func size:0x154 (global, .text, src/main.c)
timerupdate                     = 0x8004B9E4; // type:func size:0x68 (global, .text, src/main.c)
set_gfxdata                     = 0x8004BA4C; // type:func size:0x138 (global, .text, src/main.c)
setupgfx                        = 0x8004BB84; // type:func size:0x30 (global, .text, src/main.c)
creategfxtask                   = 0x8004BBB4; // type:func size:0x1AC (global, .text, src/main.c)
updatetime                      = 0x8004BD60; // type:func size:0x28 (global, .text, src/main.c)
mainproc                        = 0x8004BD88; // type:func size:0x470 (global, .text, src/main.c)
controllerThread                = 0x8004C1F8; // type:func size:0x14C (global, .text, src/main.c)
__amMain                        = 0x8004C344; // type:func size:0xC4 (global, .text, src/main.c)
osCreateScheduler2              = 0x8004C410; // type:func size:0x16C (global, .text, src/sched.c)
osScAddClient                   = 0x8004C57C; // type:func size:0x50 (global, .text, src/sched.c)
osScRemoveClient                = 0x8004C5CC; // type:func size:0x88 (global, .text, src/sched.c)
osScGetCmdQ                     = 0x8004C654; // type:func size:0x8 (global, .text, src/sched.c)
__scMain                        = 0x8004C65C; // type:func size:0x124 (local, .text, src/sched.c)
__scHandleRetrace               = 0x8004C780; // type:func size:0x120 (local, .text, src/sched.c)
__scHandleRSP                   = 0x8004C8A0; // type:func size:0x164 (local, .text, src/sched.c)
__scHandleRDP                   = 0x8004CA04; // type:func size:0xCC (local, .text, src/sched.c)
__scTaskReady                   = 0x8004CAD0; // type:func size:0x50 (local, .text, src/sched.c)
__scTaskComplete                = 0x8004CB20; // type:func size:0xC0 (local, .text, src/sched.c)
__scAppendList                  = 0x8004CBE0; // type:func size:0x68 (local, .text, src/sched.c)
__scExec                        = 0x8004CC48; // type:func size:0x110 (local, .text, src/sched.c)
__scYield                       = 0x8004CD58; // type:func size:0x3C (local, .text, src/sched.c)
__scSchedule                    = 0x8004CD94; // type:func size:0x1E4 (local, .text, src/sched.c)
initControllers                 = 0x8004CF88; // type:func
setdefaultcontrollermode        = 0x8004D804; // type:func
gameplay                        = 0x8004D950; // type:func
display_bonus                   = 0x8004DF30; // type:func
display_intro                   = 0x8004FC64; // type:func
controllervibdisable            = 0x80051910; // type:func
controllersetvib                = 0x8005194C; // type:func
updatecontrollers               = 0x80051AF8; // type:func
display_savegame                = 0x80052C30; // type:func
display_loadgame                = 0x80053C20; // type:func
display_pickslot                = 0x800547F8; // type:func
loadgame                        = 0x80055088; // type:func
display_logos                   = 0x80055680; // type:func
soundInit                       = 0x800577DC; // type:func
__amHandleFrameMsg              = 0x80057FDC; // type:func
soundSetupMsgQueue              = 0x800582F0; // type:func
stopsong                        = 0x800585D4; // type:func
xyzsound                        = 0x80058A48; // type:func
sound                           = 0x80058E1C; // type:func
spritesound                     = 0x80059034; // type:func
testcallback                    = 0x800590B0; // type:func
stopsound                       = 0x80059218; // type:func
stopenvsound                    = 0x80059280; // type:func
stopallsounds                   = 0x8005932C; // type:func
FX_StopSound                    = 0x800593F8; // type:func
fastmemcpy                      = 0x8005A490; // type:func
clearbufbyte                    = 0x8005A548; // type:func
ms_update                       = 0x8005ADFC; // type:func
adjustceilingpanning            = 0x8005AF24; // type:func
adjustfloorpanning              = 0x8005B1CC; // type:func
demoinput                       = 0x8005B480; // type:func
display_game                    = 0x8005B93C; // type:func
display_tileviewer              = 0x800646A8; // type:func
cacheandtileinit                = 0x80064848; // type:func
addexplosionmodel2              = 0x8006487C; // type:func
addexplosionmodel               = 0x80064960; // type:func
animatemodels                   = 0x800662E4; // type:func
getanglef                       = 0x8006E420; // type:func
resetsbarscroll                 = 0x8006EC0C; // type:func
initcache                       = 0x800717F0; // type:func size:0x18C (global, .text, src/cache1d.c)
allocache                       = 0x8007197C; // type:func size:0x424 (global, .text, src/cache1d.c)
suckcache                       = 0x80071DA0; // type:func size:0x14C (global, .text, src/cache1d.c)
agecache                        = 0x80071EEC; // type:func size:0x58 (global, .text, src/cache1d.c)
allocache2                      = 0x80071F44; // type:func size:0x64 (global, .text, src/cache1d.c)
reportandexit_                  = 0x80071FA8; // type:func size:0x10 (global, .text, src/cache1d.c)
updateinterpolations            = 0x80075350; // type:func size:0x58 (global, .text, src/actors1.c)
setinterpolation                = 0x800753A8; // type:func size:0x80 (global, .text, src/actors1.c)
stopinterpolation               = 0x80075428; // type:func size:0xAC (global, .text, src/actors1.c)
dointerpolations                = 0x800754D4; // type:func size:0xF0 (global, .text, src/actors1.c)
restoreinterpolations           = 0x800755C4; // type:func size:0x58 (global, .text, src/actors1.c)
ceilingspace                    = 0x8007561C; // type:func size:0x6C (global, .text, src/actors1.c)
floorspace                      = 0x80075688; // type:func size:0x6C (global, .text, src/actors1.c)
addammo                         = 0x800756F4; // type:func size:0x50 (global, .text, src/actors1.c)
addweapon                       = 0x80075744; // type:func size:0x134 (global, .text, src/actors1.c)
checkavailinven                 = 0x80075878; // type:func size:0xCC (global, .text, src/actors1.c)
checkavailweapon                = 0x80075944; // type:func size:0x174 (global, .text, src/actors1.c)
ifsquished                      = 0x80075AB8; // type:func size:0x198 (global, .text, src/actors1.c)
movesprite                      = 0x80075C50; // type:func size:0x540 (global, .text, src/actors1.c)
ssp                             = 0x80076190; // type:func size:0xB4 (global, .text, src/actors1.c)
insertspriteq                   = 0x80076244; // type:func size:0x78 (global, .text, src/actors1.c)
lotsofmoney                     = 0x800762BC; // type:func size:0x138 (global, .text, src/actors1.c)
lotsofmail                      = 0x800763F4; // type:func size:0x138 (global, .text, src/actors1.c)
lotsofpaper                     = 0x8007652C; // type:func size:0x138 (global, .text, src/actors1.c)
guts                            = 0x80076664; // type:func size:0x2F8 (global, .text, src/actors1.c)
gutsdir                         = 0x8007695C; // type:func size:0x1C0 (global, .text, src/actors1.c)
setsectinterpolate              = 0x80076B1C; // type:func size:0x14C (global, .text, src/actors1.c)
ms                              = 0x80076C68; // type:func size:0x1F0 (global, .text, src/actors1.c)
movefta                         = 0x80076E58; // type:func size:0x4B4 (global, .text, src/actors1.c)
ifhitsectors                    = 0x8007730C; // type:func size:0x7C (global, .text, src/actors1.c)
ifhitbyweapon                   = 0x80077388; // type:func size:0x314 (global, .text, src/actors1.c)
movecyclers                     = 0x8007769C; // type:func size:0x18C (global, .text, src/actors1.c)
moveplayers                     = 0x80077828; // type:func size:0x4C8 (global, .text, src/actors1.c)
movefx                          = 0x80077CF0; // type:func size:0x51C (global, .text, src/actors1.c)
movefallers                     = 0x8007820C; // type:func size:0x454 (global, .text, src/actors1.c)
movestandables                  = 0x80078660; // type:func size:0x2724 (global, .text, src/actors1.c)
movetransports                  = 0x8007AD84; // type:func size:0xEE0 (global, .text, src/actors1.c)
moveexplosions                  = 0x8007BC64; // type:func size:0x1648 (global, .text, src/actors1.c)
moveeffectors                   = 0x8007D2AC; // type:func size:0x6444 (global, .text, src/actors1.c)
makeitfall_bomb                 = 0x800836F0; // type:func size:0x28C (global, .text, src/actors2.c)
manhdist                        = 0x8008397C; // type:func size:0xA8 (global, .text, src/actors2.c)
moveactors                      = 0x80083A24; // type:func size:0x3EBC (global, .text, src/actors2.c)
getanglediff                    = 0x800878E0; // type:func size:0xB4 (global, .text, src/actors3.c)
hitradius                       = 0x80087994; // type:func size:0xAB0 (global, .text, src/actors3.c)
moveweapons                     = 0x80088444; // type:func size:0x139C (global, .text, src/actors3.c)
iscorpse                        = 0x800897E0; // type:func size:0x54 (global, .text, src/gamedef.c)
getincangle                     = 0x80089834; // type:func size:0x9C (global, .text, src/gamedef.c)
getglobalz                      = 0x800898D0; // type:func size:0x328 (global, .text, src/gamedef.c)
makeitfall                      = 0x80089BF8; // type:func size:0x250 (global, .text, src/gamedef.c)
dodge                           = 0x80089E48; // type:func size:0x1AC (global, .text, src/gamedef.c)
furthestangle                   = 0x80089FF4; // type:func size:0x250 (global, .text, src/gamedef.c)
furthestcanseepoint             = 0x8008A244; // type:func size:0x2FC (global, .text, src/gamedef.c)
alterang                        = 0x8008A540; // type:func size:0x460 (global, .text, src/gamedef.c)
move                            = 0x8008A9A0; // type:func size:0xD4C (global, .text, src/gamedef.c)
parseifelse                     = 0x8008B6EC; // type:func size:0xA8 (global, .text, src/gamedef.c)
parse                           = 0x8008B794; // type:func size:0x3CF4 (global, .text, src/gamedef.c)
execute                         = 0x8008F488; // type:func size:0x48C (global, .text, src/gamedef.c)
mulscale                        = 0x8008F920; // type:func size:0x44 (global, .text, src/engine.c)
mulscale1                       = 0x8008F964; // type:func size:0x44 (global, .text, src/engine.c)
mulscale2                       = 0x8008F9A8; // type:func size:0x44 (global, .text, src/engine.c)
mulscale3                       = 0x8008F9EC; // type:func size:0x44 (global, .text, src/engine.c)
mulscale4                       = 0x8008FA30; // type:func size:0x44 (global, .text, src/engine.c)
mulscale5                       = 0x8008FA74; // type:func size:0x44 (global, .text, src/engine.c)
mulscale6                       = 0x8008FAB8; // type:func size:0x44 (global, .text, src/engine.c)
mulscale7                       = 0x8008FAFC; // type:func size:0x44 (global, .text, src/engine.c)
mulscale8                       = 0x8008FB40; // type:func size:0x44 (global, .text, src/engine.c)
mulscale9                       = 0x8008FB84; // type:func size:0x44 (global, .text, src/engine.c)
mulscale10                      = 0x8008FBC8; // type:func size:0x44 (global, .text, src/engine.c)
mulscale11                      = 0x8008FC0C; // type:func size:0x44 (global, .text, src/engine.c)
mulscale12                      = 0x8008FC50; // type:func size:0x44 (global, .text, src/engine.c)
mulscale13                      = 0x8008FC94; // type:func size:0x44 (global, .text, src/engine.c)
mulscale14                      = 0x8008FCD8; // type:func size:0x44 (global, .text, src/engine.c)
mulscale15                      = 0x8008FD1C; // type:func size:0x44 (global, .text, src/engine.c)
mulscale16                      = 0x8008FD60; // type:func size:0x44 (global, .text, src/engine.c)
mulscale17                      = 0x8008FDA4; // type:func size:0x44 (global, .text, src/engine.c)
mulscale18                      = 0x8008FDE8; // type:func size:0x44 (global, .text, src/engine.c)
mulscale19                      = 0x8008FE2C; // type:func size:0x44 (global, .text, src/engine.c)
mulscale20                      = 0x8008FE70; // type:func size:0x44 (global, .text, src/engine.c)
mulscale21                      = 0x8008FEB4; // type:func size:0x44 (global, .text, src/engine.c)
mulscale22                      = 0x8008FEF8; // type:func size:0x44 (global, .text, src/engine.c)
mulscale23                      = 0x8008FF3C; // type:func size:0x44 (global, .text, src/engine.c)
mulscale24                      = 0x8008FF80; // type:func size:0x44 (global, .text, src/engine.c)
mulscale25                      = 0x8008FFC4; // type:func size:0x44 (global, .text, src/engine.c)
mulscale26                      = 0x80090008; // type:func size:0x44 (global, .text, src/engine.c)
mulscale27                      = 0x8009004C; // type:func size:0x44 (global, .text, src/engine.c)
mulscale28                      = 0x80090090; // type:func size:0x44 (global, .text, src/engine.c)
mulscale29                      = 0x800900D4; // type:func size:0x44 (global, .text, src/engine.c)
mulscale30                      = 0x80090118; // type:func size:0x44 (global, .text, src/engine.c)
mulscale31                      = 0x8009015C; // type:func size:0x44 (global, .text, src/engine.c)
mulscale32                      = 0x800901A0; // type:func size:0x44 (global, .text, src/engine.c)
dmulscale1                      = 0x800901E4; // type:func size:0x70 (global, .text, src/engine.c)
dmulscale2                      = 0x80090254; // type:func size:0x70 (global, .text, src/engine.c)
dmulscale3                      = 0x800902C4; // type:func size:0x70 (global, .text, src/engine.c)
dmulscale4                      = 0x80090334; // type:func size:0x70 (global, .text, src/engine.c)
dmulscale5                      = 0x800903A4; // type:func size:0x70 (global, .text, src/engine.c)
dmulscale6                      = 0x80090414; // type:func size:0x70 (global, .text, src/engine.c)
dmulscale7                      = 0x80090484; // type:func size:0x70 (global, .text, src/engine.c)
dmulscale8                      = 0x800904F4; // type:func size:0x70 (global, .text, src/engine.c)
dmulscale9                      = 0x80090564; // type:func size:0x70 (global, .text, src/engine.c)
dmulscale10                     = 0x800905D4; // type:func size:0x70 (global, .text, src/engine.c)
dmulscale11                     = 0x80090644; // type:func size:0x70 (global, .text, src/engine.c)
dmulscale12                     = 0x800906B4; // type:func size:0x70 (global, .text, src/engine.c)
dmulscale13                     = 0x80090724; // type:func size:0x70 (global, .text, src/engine.c)
dmulscale14                     = 0x80090794; // type:func size:0x70 (global, .text, src/engine.c)
dmulscale15                     = 0x80090804; // type:func size:0x70 (global, .text, src/engine.c)
dmulscale16                     = 0x80090874; // type:func size:0x70 (global, .text, src/engine.c)
dmulscale17                     = 0x800908E4; // type:func size:0x70 (global, .text, src/engine.c)
dmulscale18                     = 0x80090954; // type:func size:0x70 (global, .text, src/engine.c)
dmulscale19                     = 0x800909C4; // type:func size:0x70 (global, .text, src/engine.c)
dmulscale20                     = 0x80090A34; // type:func size:0x70 (global, .text, src/engine.c)
dmulscale21                     = 0x80090AA4; // type:func size:0x70 (global, .text, src/engine.c)
dmulscale22                     = 0x80090B14; // type:func size:0x70 (global, .text, src/engine.c)
dmulscale23                     = 0x80090B84; // type:func size:0x70 (global, .text, src/engine.c)
dmulscale24                     = 0x80090BF4; // type:func size:0x70 (global, .text, src/engine.c)
dmulscale25                     = 0x80090C64; // type:func size:0x70 (global, .text, src/engine.c)
dmulscale26                     = 0x80090CD4; // type:func size:0x70 (global, .text, src/engine.c)
dmulscale27                     = 0x80090D44; // type:func size:0x70 (global, .text, src/engine.c)
dmulscale28                     = 0x80090DB4; // type:func size:0x70 (global, .text, src/engine.c)
dmulscale29                     = 0x80090E24; // type:func size:0x70 (global, .text, src/engine.c)
dmulscale30                     = 0x80090E94; // type:func size:0x70 (global, .text, src/engine.c)
dmulscale31                     = 0x80090F04; // type:func size:0x70 (global, .text, src/engine.c)
dmulscale32                     = 0x80090F74; // type:func size:0x70 (global, .text, src/engine.c)
divscale                        = 0x80090FE4; // type:func size:0x4C (global, .text, src/engine.c)
divscale1                       = 0x80091030; // type:func size:0x4C (global, .text, src/engine.c)
divscale2                       = 0x8009107C; // type:func size:0x4C (global, .text, src/engine.c)
divscale3                       = 0x800910C8; // type:func size:0x4C (global, .text, src/engine.c)
divscale4                       = 0x80091114; // type:func size:0x4C (global, .text, src/engine.c)
divscale5                       = 0x80091160; // type:func size:0x4C (global, .text, src/engine.c)
divscale6                       = 0x800911AC; // type:func size:0x4C (global, .text, src/engine.c)
divscale7                       = 0x800911F8; // type:func size:0x4C (global, .text, src/engine.c)
divscale8                       = 0x80091244; // type:func size:0x4C (global, .text, src/engine.c)
divscale9                       = 0x80091290; // type:func size:0x4C (global, .text, src/engine.c)
divscale10                      = 0x800912DC; // type:func size:0x4C (global, .text, src/engine.c)
divscale11                      = 0x80091328; // type:func size:0x4C (global, .text, src/engine.c)
divscale12                      = 0x80091374; // type:func size:0x4C (global, .text, src/engine.c)
divscale13                      = 0x800913C0; // type:func size:0x4C (global, .text, src/engine.c)
divscale14                      = 0x8009140C; // type:func size:0x4C (global, .text, src/engine.c)
divscale15                      = 0x80091458; // type:func size:0x4C (global, .text, src/engine.c)
divscale16                      = 0x800914A4; // type:func size:0x4C (global, .text, src/engine.c)
divscale17                      = 0x800914F0; // type:func size:0x4C (global, .text, src/engine.c)
divscale18                      = 0x8009153C; // type:func size:0x4C (global, .text, src/engine.c)
divscale19                      = 0x80091588; // type:func size:0x4C (global, .text, src/engine.c)
divscale20                      = 0x800915D4; // type:func size:0x4C (global, .text, src/engine.c)
divscale21                      = 0x80091620; // type:func size:0x4C (global, .text, src/engine.c)
divscale22                      = 0x8009166C; // type:func size:0x4C (global, .text, src/engine.c)
divscale23                      = 0x800916B8; // type:func size:0x4C (global, .text, src/engine.c)
divscale24                      = 0x80091704; // type:func size:0x4C (global, .text, src/engine.c)
divscale25                      = 0x80091750; // type:func size:0x4C (global, .text, src/engine.c)
divscale26                      = 0x8009179C; // type:func size:0x4C (global, .text, src/engine.c)
divscale27                      = 0x800917E8; // type:func size:0x4C (global, .text, src/engine.c)
divscale28                      = 0x80091834; // type:func size:0x4C (global, .text, src/engine.c)
divscale29                      = 0x80091880; // type:func size:0x4C (global, .text, src/engine.c)
divscale30                      = 0x800918CC; // type:func size:0x4C (global, .text, src/engine.c)
divscale31                      = 0x80091918; // type:func size:0x4C (global, .text, src/engine.c)
divscale32                      = 0x80091964; // type:func size:0x4C (global, .text, src/engine.c)
scale                           = 0x800919B0; // type:func size:0x50 (global, .text, src/engine.c)
nsqrtasm                        = 0x80091A00; // type:func size:0x38 (global, .text, src/engine.c)
klabs                           = 0x80091A38; // type:func size:0x18 (global, .text, src/engine.c)
ksgn                            = 0x80091A50; // type:func size:0x18 (global, .text, src/engine.c)
initengine                      = 0x80091A68; // type:func size:0x30 (global, .text, src/engine.c)
clipinsidebox                   = 0x80091A98; // type:func size:0x1D0 (global, .text, src/engine.c)
clipinsideboxline               = 0x80091C68; // type:func size:0x1AC (global, .text, src/engine.c)
inside                          = 0x80091E14; // type:func size:0x210 (global, .text, src/engine.c)
getangle                        = 0x80092024; // type:func size:0x140 (global, .text, src/engine.c)
ksqrt                           = 0x80092164; // type:func size:0x38 (global, .text, src/engine.c)
setsprite                       = 0x8009219C; // type:func size:0xA0 (global, .text, src/engine.c)
animateoffs                     = 0x8009223C; // type:func size:0x1B8 (global, .text, src/engine.c)
initspritelists                 = 0x800923F4; // type:func size:0x148 (global, .text, src/engine.c)
insertsprite                    = 0x8009253C; // type:func size:0x4C (global, .text, src/engine.c)
insertspritesect                = 0x80092588; // type:func size:0xD0 (global, .text, src/engine.c)
insertspritestat                = 0x80092658; // type:func size:0xD0 (global, .text, src/engine.c)
deletesprite                    = 0x80092728; // type:func size:0x40 (global, .text, src/engine.c)
deletespritesect                = 0x80092768; // type:func size:0xE8 (global, .text, src/engine.c)
deletespritestat                = 0x80092850; // type:func size:0xE8 (global, .text, src/engine.c)
changespritesect                = 0x80092938; // type:func size:0xB8 (global, .text, src/engine.c)
changespritestat                = 0x800929F0; // type:func size:0xB8 (global, .text, src/engine.c)
nextsectorneighborz             = 0x80092AA8; // type:func size:0x3C0 (global, .text, src/engine.c)
cansee                          = 0x80092E68; // type:func size:0x3E4 (global, .text, src/engine.c)
hitscan                         = 0x8009324C; // type:func size:0x17D8 (global, .text, src/engine.c)
neartag                         = 0x80094A24; // type:func size:0x7F8 (global, .text, src/engine.c)
lintersect                      = 0x8009521C; // type:func size:0x210 (global, .text, src/engine.c)
rintersect                      = 0x8009542C; // type:func size:0x200 (global, .text, src/engine.c)
dragpoint                       = 0x8009562C; // type:func size:0x17C (global, .text, src/engine.c)
lastwall                        = 0x800957A8; // type:func size:0x120 (global, .text, src/engine.c)
clipmove                        = 0x800958C8; // type:func size:0x1B70 (global, .text, src/engine.c)
keepaway                        = 0x80097438; // type:func size:0x12C (global, .text, src/engine.c)
raytrace                        = 0x80097564; // type:func size:0x2FC (global, .text, src/engine.c)
pushmove                        = 0x80097860; // type:func size:0x558 (global, .text, src/engine.c)
updatesector                    = 0x80097DB8; // type:func size:0x14C (global, .text, src/engine.c)
rotatepoint                     = 0x80097F04; // type:func size:0x108 (global, .text, src/engine.c)
krand2                          = 0x8009800C; // type:func size:0x48 (global, .text, src/engine.c)
krand                           = 0x80098054; // type:func size:0x2C (global, .text, src/engine.c)
getzrange                       = 0x80098080; // type:func size:0xDE4 (global, .text, src/engine.c)
getceilzofslope                 = 0x80098E64; // type:func size:0x150 (global, .text, src/engine.c)
getflorzofslope                 = 0x80098FB4; // type:func size:0x150 (global, .text, src/engine.c)
getzsofslope                    = 0x80099104; // type:func size:0x1B0 (global, .text, src/engine.c)
alignflorslope                  = 0x800992B4; // type:func size:0x12C (global, .text, src/engine.c)
FindDistance2D                  = 0x800993E0; // type:func size:0x34 (global, .text, src/engine.c)
FindDistance3D                  = 0x80099414; // type:func size:0x44 (global, .text, src/engine.c)
gameexit                        = 0x80099460; // type:func
FTA                             = 0x80099868; // type:func
check_fta_sounds                = 0x80099C78; // type:func
badguy                          = 0x80099ED4; // type:func
badguypic                       = 0x8009A090; // type:func
inventory                       = 0x8009A258; // type:func
lotsofglass                     = 0x8009A2B0; // type:func
spriteglass                     = 0x8009A6CC; // type:func
ceilingglass                    = 0x8009A8A4; // type:func
lotsofcolourglass               = 0x8009AB30; // type:func
LocateTheLocator                = 0x8009AF90; // type:func
EGS                             = 0x8009B028; // type:func
wallswitchcheck                 = 0x8009B25C; // type:func
spawn                           = 0x8009D240; // type:func
incur_damage                    = 0x800A1580; // type:func size:0x198 (global, .text, src/player1.c)
quickkill                       = 0x800A1718; // type:func size:0xE8 (global, .text, src/player1.c)
forceplayerangle                = 0x800A1800; // type:func size:0x58 (global, .text, src/player1.c)
tracers                         = 0x800A1858; // type:func size:0x36C (global, .text, src/player1.c)
hits                            = 0x800A1BC4; // type:func size:0x110 (global, .text, src/player1.c)
hitasprite                      = 0x800A1CD4; // type:func size:0x170 (global, .text, src/player1.c)
hitawall                        = 0x800A1E44; // type:func size:0xD0 (global, .text, src/player1.c)
aim                             = 0x800A1F14; // type:func size:0x770 (global, .text, src/player1.c)
BUTTON                          = 0x800A2684; // type:func size:0xD0 (global, .text, src/player1.c)
getinput                        = 0x800A2754; // type:func size:0x6A0 (global, .text, src/player1.c)
doincrements                    = 0x800A2DF4; // type:func size:0x63C (global, .text, src/player1.c)
checkweapons                    = 0x800A3430; // type:func size:0xB0 (global, .text, src/player1.c)
processinput                    = 0x800A34E0; // type:func size:0x3210 (global, .text, src/player1.c)
shoot                           = 0x800A66F0; // type:func size:0x3660 (global, .text, src/player2.c)
processweapon                   = 0x800A9D50; // type:func size:0x1100 (global, .text, src/player3.c)
resetplayerstats                = 0x800AAE50; // type:func size:0x1FC (global, .text, src/premap.c)
resetweapons                    = 0x800AB04C; // type:func size:0xCC (global, .text, src/premap.c)
resetinventory                  = 0x800AB118; // type:func size:0x70 (global, .text, src/premap.c)
resetprestat                    = 0x800AB188; // type:func size:0x1C8 (global, .text, src/premap.c)
prelevel                        = 0x800AB350; // type:func size:0xAC8 (global, .text, src/premap.c)
newgame                         = 0x800ABE18; // type:func size:0x14C (global, .text, src/premap.c)
resetpspritevars                = 0x800ABF64; // type:func size:0x344 (global, .text, src/premap.c)
clearfrags                      = 0x800AC2A8; // type:func size:0x7C (global, .text, src/premap.c)
resettimevars                   = 0x800AC324; // type:func size:0x48 (global, .text, src/premap.c)
resetmys                        = 0x800AC36C; // type:func size:0x138 (global, .text, src/premap.c)
enterlevel                      = 0x800AC4A4; // type:func size:0x338 (global, .text, src/premap.c)
pickrandomspot                  = 0x800AC7DC; // type:func size:0x120 (global, .text, src/premap.c)
callsound                       = 0x800AC900; // type:func
check_activator_motion          = 0x800ACB10; // type:func
isadoorwall                     = 0x800ACC8C; // type:func
isanunderoperator               = 0x800ACD84; // type:func
isanearoperator                 = 0x800ACDC4; // type:func
checkcursectnums                = 0x800ACE04; // type:func
ldist                           = 0x800ACE8C; // type:func
dist                            = 0x800ACEC8; // type:func
findplayer                      = 0x800ACF18; // type:func
findotherplayer                 = 0x800AD108; // type:func
doanimations                    = 0x800AD24C; // type:func
getanimationgoal                = 0x800AD620; // type:func
setanimation                    = 0x800AD66C; // type:func
animatewalls                    = 0x800AD768; // type:func
activatewarpelevators           = 0x800AD9CC; // type:func
operatesectors                  = 0x800ADBFC; // type:func
operaterespawns                 = 0x800AF004; // type:func
operateactivators               = 0x800AF124; // type:func
operatemasterswitches           = 0x800AF5A0; // type:func
operateforcefields              = 0x800AF624; // type:func
checkhitswitch                  = 0x800AF77C; // type:func
activatebysector                = 0x800B0580; // type:func
breakwall                       = 0x800B064C; // type:func
checkhitwall                    = 0x800B06B8; // type:func
checkplayerhurt                 = 0x800B1190; // type:func
checkhitceiling                 = 0x800B147C; // type:func
checkhitsprite                  = 0x800B177C; // type:func
allignwarpelevators             = 0x800B2E9C; // type:func
getnextweapon                   = 0x800B2FB0; // type:func
cheatkeys                       = 0x800B31F8; // type:func
checksectors                    = 0x800B3CD0; // type:func
loadefs                         = 0x800B4D34; // type:func
gettilesizx                     = 0x800B4E50; // type:func size:0x58 (global, .text, src/tile.c)
gettilesizy                     = 0x800B4EA8; // type:func size:0x58 (global, .text, src/tile.c)
getpicanm                       = 0x800B4F00; // type:func size:0x3C (global, .text, src/tile.c)
tmulscale11                     = 0x800B4F40; // type:func size:0xAC (global, .text, src/dukebot.c)
getspritescore                  = 0x800B4FEC; // type:func size:0x65C (global, .text, src/dukebot.c)
computerinput                   = 0x800B5648; // type:func size:0xDC (global, .text, src/dukebot.c)
computergetinput                = 0x800B5724; // type:func size:0x1F70 (global, .text, src/dukebot.c)
menus                           = 0x800B78D0; // type:func
osViBlack                       = 0x800BAAE0; // type:func size:0x70 (global, .text, src/libultra/io/viblack.c)
osInitialize                    = 0x800BAB50; // type:func size:0x28C (global, .text, src/libultra/os/initialize.c)
osCreateThread                  = 0x800BADE0; // type:func size:0x144 (global, .text, src/libultra/os/createthread.c)
osStartThread                   = 0x800BAF30; // type:func size:0x150 (global, .text, src/libultra/os/startthread.c)
osCreatePiManager               = 0x800BB080; // type:func size:0x188 (global, .text, src/libultra/io/pimgr.c)
osSetThreadPri                  = 0x800BB210; // type:func size:0xE0 (global, .text, src/libultra/os/setthreadpri.c)
osWritebackDCacheAll            = 0x800BB2F0; // type:func size:0x28 (global, .text, asm/libultra/os/writebackdcacheall.s)
osPiGetStatus                   = 0x800BB320; // type:func size:0xC (global, .text, src/libultra/io/pigetstat.c)
osPiStartDma                    = 0x800BB330; // type:func size:0x10C (global, .text, src/libultra/io/pidma.c)
osRecvMesg                      = 0x800BB440; // type:func size:0x138 (global, .text, src/libultra/os/recvmesg.c)
osGetTime                       = 0x800BB580; // type:func size:0x84 (global, .text, src/libultra/os/gettime.c)
osSendMesg                      = 0x800BB610; // type:func size:0x14C (global, .text, src/libultra/os/sendmesg.c)
osCreateMesgQueue               = 0x800BB760; // type:func size:0x2C (global, .text, src/libultra/os/createmesgqueue.c)
__ull_rshift                    = 0x800BB790; // type:func size:0x2C (global, .text, src/libultra/libc/ll.c)
__ull_rem                       = 0x800BB7BC; // type:func size:0x44 (global, .text, src/libultra/libc/ll.c)
__ull_div                       = 0x800BB7F8; // type:func size:0x3C (global, .text, src/libultra/libc/ll.c)
__ll_lshift                     = 0x800BB834; // type:func size:0x2C (global, .text, src/libultra/libc/ll.c)
__ll_rem                        = 0x800BB860; // type:func size:0x3C (global, .text, src/libultra/libc/ll.c)
__ll_div                        = 0x800BB89C; // type:func size:0x5C (global, .text, src/libultra/libc/ll.c)
__ll_mul                        = 0x800BB8F8; // type:func size:0x30 (global, .text, src/libultra/libc/ll.c)
__ull_divremi                   = 0x800BB928; // type:func size:0x60 (global, .text, src/libultra/libc/ll.c)
__ll_mod                        = 0x800BB988; // type:func size:0x9C (global, .text, src/libultra/libc/ll.c)
__ll_rshift                     = 0x800BBA24; // type:func size:0x2C (global, .text, src/libultra/libc/ll.c)
osViSetYScale                   = 0x800BBA50; // type:func size:0x58 (global, .text, src/libultra/io/visetyscale.c)
osCreateViManager               = 0x800BBAB0; // type:func size:0x188 (global, .text, src/libultra/io/vimgr.c)
viMgrMain                       = 0x800BBC38; // type:func size:0x1A0 (local, .text, src/libultra/io/vimgr.c)
osViSetMode                     = 0x800BBE70; // type:func size:0x68 (global, .text, src/libultra/io/visetmode.c)
osViSetSpecialFeatures          = 0x800BBEE0; // type:func size:0xB8 (global, .text, src/libultra/io/visetspecial.c)
osSetEventMesg                  = 0x800BC0A0; // type:func size:0x64 (global, .text, src/libultra/os/seteventmesg.c)
osViSetEvent                    = 0x800BC110; // type:func size:0x6C (global, .text, src/libultra/io/visetevent.c)
osSetIntMask                    = 0x800BC180; // type:func
osSpTaskYielded                 = 0x800BC220; // type:func size:0x80 (global, .text, src/libultra/io/sptaskyielded.c)
osViGetCurrentFramebuffer       = 0x800BC2A0; // type:func size:0x40 (global, .text, src/libultra/io/vigetcurrframebuf.c)
osViGetNextFramebuffer          = 0x800BC2E0; // type:func size:0x40 (global, .text, src/libultra/io/vigetnextframebuf.c)
osViSwapBuffer                  = 0x800BC320; // type:func size:0x50 (global, .text, src/libultra/io/viswapbuf.c)
_VirtualToPhysicalTask          = 0x800BC370; // type:func size:0x11C (local, .text, src/libultra/io/sptask.c)
osSpTaskLoad                    = 0x800BC48C; // type:func size:0x190 (global, .text, src/libultra/io/sptask.c)
osSpTaskStartGo                 = 0x800BC61C; // type:func size:0x40 (global, .text, src/libultra/io/sptask.c)
osDpSetNextBuffer               = 0x800BC660; // type:func size:0xA4 (global, .text, src/libultra/io/dpsetnextbuf.c)
osSpTaskYield                   = 0x800BC710; // type:func size:0x20 (global, .text, src/libultra/io/sptaskyield.c)
osContStartReadData             = 0x800BC730; // type:func size:0xC4 (global, .text, src/libultra/io/contreaddata.c)
osContGetReadData               = 0x800BC7F4; // type:func size:0xA8 (global, .text, src/libultra/io/contreaddata.c)
__osPackReadData                = 0x800BC89C; // type:func size:0xEC (local, .text, src/libultra/io/contreaddata.c)
osContInit                      = 0x800BC990; // type:func size:0x1F8 (global, .text, src/libultra/io/controller.c)
__osContGetInitData             = 0x800BCB88; // type:func size:0xD0 (local, .text, src/libultra/io/controller.c)
__osPackRequestData             = 0x800BCC58; // type:func size:0xF4 (local, .text, src/libultra/io/controller.c)
osPfsInitPak                    = 0x800BCD50; // type:func size:0x264 (global, .text, src/libultra/io/pfsinitpak.c)
osPfsNumFiles                   = 0x800BCFC0; // type:func size:0x144 (global, .text, src/libultra/io/pfsnumfiles.c)
osPfsFreeBlocks                 = 0x800BD110; // type:func size:0x14C (global, .text, src/libultra/io/pfsfreeblocks.c)
osMotorStop                     = 0x800BD260; // type:func size:0x168 (global, .text, src/libultra/io/motor.c)
osMotorStart                    = 0x800BD3C8; // type:func size:0x16C (global, .text, src/libultra/io/motor.c)
_MakeMotorData                  = 0x800BD534; // type:func size:0x17C (local, .text, src/libultra/io/motor.c)
osMotorInit                     = 0x800BD6B0; // type:func size:0x1C4 (global, .text, src/libultra/io/motor.c)
guTranslateF                    = 0x800BD880; // type:func size:0x48 (global, .text, src/libultra/gu/translate.c)
guTranslate                     = 0x800BD8C8; // type:func size:0x54 (global, .text, src/libultra/gu/translate.c)
guScaleF                        = 0x800BD920; // type:func size:0x54 (global, .text, src/libultra/gu/scale.c)
guScale                         = 0x800BD974; // type:func size:0x48 (global, .text, src/libultra/gu/scale.c)
proutSprintf                    = 0x800BD9C0; // type:func size:0x24 (local, .text, src/libultra/libc/sprintf.c)
sprintf                         = 0x800BD9E4; // type:func size:0x58 (global, .text, src/libultra/libc/sprintf.c)
memcpy                          = 0x800BDA40; // type:func size:0x2C (global, .text, src/libultra/libc/string.c)
strlen                          = 0x800BDA6C; // type:func size:0x28 (global, .text, src/libultra/libc/string.c)
strchr                          = 0x800BDA94; // type:func size:0x40 (global, .text, src/libultra/libc/string.c)
osPfsFileState                  = 0x800BDAE0; // type:func size:0x310 (global, .text, src/libultra/io/pfsfilestate.c)
osYieldThread                   = 0x800BDDD0; // type:func size:0x4C (global, .text, src/libultra/os/yieldthread.c)
osPfsDeleteFile                 = 0x800BDE20; // type:func size:0x2E0 (global, .text, src/libultra/io/pfsdeletefile.c)
__osPfsReleasePages             = 0x800BE100; // type:func size:0x238 (global, .text, src/libultra/io/pfsdeletefile.c)
__osBlockSum                    = 0x800BE338; // type:func size:0xF0 (global, .text, src/libultra/io/pfsdeletefile.c)
osPfsAllocateFile               = 0x800BE430; // type:func size:0x484 (global, .text, src/libultra/io/pfsallocatefile.c)
__osPfsDeclearPage              = 0x800BE8B4; // type:func size:0x264 (global, .text, src/libultra/io/pfsallocatefile.c)
__osClearPage                   = 0x800BEB18; // type:func size:0xC0 (local, .text, src/libultra/io/pfsallocatefile.c)
__osPfsGetNextPage              = 0x800BEBE0; // type:func size:0xFC (local, .text, src/libultra/io/pfsreadwritefile.c)
osPfsReadWriteFile              = 0x800BECDC; // type:func size:0x400 (global, .text, src/libultra/io/pfsreadwritefile.c)
osPfsFindFile                   = 0x800BF0E0; // type:func size:0x1B4 (global, .text, src/libultra/io/pfssearchfile.c)
osPfsRepairId                   = 0x800BF2A0; // type:func size:0x25C (global, .text, src/libultra/io/pfsrepairid.c)
guRotateF                       = 0x800BF500; // type:func size:0x194 (global, .text, src/libultra/gu/rotate.c)
guRotate                        = 0x800BF694; // type:func size:0x50 (global, .text, src/libultra/gu/rotate.c)
osVirtualToPhysical             = 0x800BF6F0; // type:func size:0x7C (global, .text, src/libultra/os/virtualtophysical.c)
alUnlink                        = 0x800BF770; // type:func size:0x30 (global, .text, src/libultra/audio/sl.c)
alLink                          = 0x800BF7A0; // type:func size:0x24 (global, .text, src/libultra/audio/sl.c)
alClose                         = 0x800BF7C4; // type:func size:0x38 (global, .text, src/libultra/audio/sl.c)
alInit                          = 0x800BF7FC; // type:func size:0x34 (global, .text, src/libultra/audio/sl.c)
alHeapDBAlloc                   = 0x800BF830; // type:func size:0x54 (global, .text, src/libultra/audio/heapalloc.c)
alHeapInit                      = 0x800BF890; // type:func size:0x34 (global, .text, src/libultra/audio/heapinit.c)
osAiSetFrequency                = 0x800BF8D0; // type:func size:0x15C (global, .text, src/libultra/io/aisetfreq.c)
_removeEvents                   = 0x800BFA30; // type:func size:0x8C (local, .text, src/libultra/audio/sndplayer.c)
_sndpVoiceHandler               = 0x800BFABC; // type:func size:0x548 (local, .text, src/libultra/audio/sndplayer.c)
alSndpNew                       = 0x800C0004; // type:func size:0x13C (global, .text, src/libultra/audio/sndplayer.c)
_bnkfPatchBank                  = 0x800C0150; // type:func size:0xF4 (local, .text, src/libultra/audio/bnkf.c)
alBnkfNew                       = 0x800C0244; // type:func size:0x104 (global, .text, src/libultra/audio/bnkf.c)
alSeqFileNew                    = 0x800C0348; // type:func size:0x40 (global, .text, src/libultra/audio/bnkf.c)
alSndpAllocate                  = 0x800C0390; // type:func size:0x9C (global, .text, src/libultra/audio/sndpallocate.c)
__CSPPostNextSeqEvent           = 0x800C0430; // type:func size:0x70 (local, .text, src/libultra/audio/csplayer.c)
__setUsptFromTempo              = 0x800C04A0; // type:func size:0x3C (local, .text, src/libultra/audio/csplayer.c)
__CSPHandleMetaMsg              = 0x800C04DC; // type:func size:0x1D0 (local, .text, src/libultra/audio/csplayer.c)
__CSPHandleMIDIMsg              = 0x800C06AC; // type:func size:0x830 (local, .text, src/libultra/audio/csplayer.c)
__CSPVoiceHandler               = 0x800C0EDC; // type:func size:0x614 (local, .text, src/libultra/audio/csplayer.c)
alCSPNew                        = 0x800C14F0; // type:func size:0x16C (global, .text, src/libultra/audio/csplayer.c)
alSeqpSetBank                   = 0x800C1660; // type:func size:0x34 (global, .text, src/libultra/audio/seqpsetbank.c)
alCSPSetVol                     = 0x800C16A0; // type:func size:0x3C (global, .text, src/libultra/audio/cspsetvol.c)
alSndpSetSound                  = 0x800C16E0; // type:func size:0x14 (global, .text, src/libultra/audio/sndpsetsound.c)
alSndpGetState                  = 0x800C1700; // type:func size:0x20 (global, .text, src/libultra/audio/sndpgetstate.c)
alSndpSetPitch                  = 0x800C1720; // type:func size:0x54 (global, .text, src/libultra/audio/sndpsetpitch.c)
alSndpSetPan                    = 0x800C1780; // type:func size:0x58 (global, .text, src/libultra/audio/sndpsetpan.c)
alSndpSetVol                    = 0x800C17E0; // type:func size:0x58 (global, .text, src/libultra/audio/sndpsetvol.c)
alSndpPlay                      = 0x800C1840; // type:func size:0x64 (global, .text, src/libultra/audio/sndpplay.c)
alCSPStop                       = 0x800C18B0; // type:func size:0x30 (global, .text, src/libultra/audio/cspstop.c)
alCSeqGetLoc                    = 0x800C18E0; // type:func size:0xA0 (global, .text, src/libultra/audio/cseq.c)
__getTrackByte                  = 0x800C1A20; // type:func size:0xC0 (local, .text, src/libultra/audio/cseq.c)
__readVarLen                    = 0x800C1AE4; // type:func size:0x58 (local, .text, src/libultra/audio/cseq.c)
alCSeqNextEvent                 = 0x800C1B44; // type:func size:0x2F4 (global, .text, src/libultra/audio/cseq.c)
alCSeqNew                       = 0x800C1E3C; // type:func size:0x114 (global, .text, src/libultra/audio/cseq.c)
alCSeqNewMarker                 = 0x800C1F50; // type:func size:0x16C (global, .text, src/libultra/audio/cseq.c)
alCSeqSecToTicks                = 0x800C20C4; // type:func size:0xFC (global, .text, src/libultra/audio/cseq.c)
alCSeqTicksToSec                = 0x800C21C0; // type:func size:0x6C (global, .text, src/libultra/audio/cseq.c)
__alCSeqNextDelta               = 0x800C222C; // type:func size:0x168 (global, .text, src/libultra/audio/cseq.c)
alCSPSetSeq                     = 0x800C23A0; // type:func size:0x34 (global, .text, src/libultra/audio/cspsetseq.c)
alCSPPlay                       = 0x800C23E0; // type:func size:0x30 (global, .text, src/libultra/audio/cspplay.c)
alSndpStop                      = 0x800C2410; // type:func size:0x4C (global, .text, src/libultra/audio/sndpstop.c)
_timeToSamples                  = 0x800C2468; // type:func size:0x58 (global, .text, src/libultra/audio/synthesizer.c)
_freePVoice                     = 0x800C24C0; // type:func size:0x38 (global, .text, src/libultra/audio/synthesizer.c)
_collectPVoices                 = 0x800C24F8; // type:func size:0x60 (global, .text, src/libultra/audio/synthesizer.c)
__freeParam                     = 0x800C2558; // type:func size:0x18 (global, .text, src/libultra/audio/synthesizer.c)
__allocParam                    = 0x800C2570; // type:func size:0x38 (global, .text, src/libultra/audio/synthesizer.c)
alAudioFrame                    = 0x800C25A8; // type:func size:0x298 (global, .text, src/libultra/audio/synthesizer.c)
alSynNew                        = 0x800C2840; // type:func size:0x300 (global, .text, src/libultra/audio/synthesizer.c)
osAiSetNextBuffer               = 0x800C2B40; // type:func size:0xA8 (global, .text, src/libultra/io/aisetnextbuf.c)
sinf                            = 0x800C2BF0; // type:func size:0x1C0 (global, .text, src/libultra/gu/sinf.c)
cosf                            = 0x800C2DB0; // type:func size:0x168 (global, .text, src/libultra/gu/cosf.c)
__d_to_ll                       = 0x800C2F20; // type:func size:0x1C (global, .text, src/libultra/libc/llcvt.c)
__f_to_ll                       = 0x800C2F3C; // type:func size:0x1C (global, .text, src/libultra/libc/llcvt.c)
__d_to_ull                      = 0x800C2F58; // type:func size:0xA0 (global, .text, src/libultra/libc/llcvt.c)
__f_to_ull                      = 0x800C2FF8; // type:func size:0x9C (global, .text, src/libultra/libc/llcvt.c)
__ll_to_d                       = 0x800C3094; // type:func size:0x18 (global, .text, src/libultra/libc/llcvt.c)
__ll_to_f                       = 0x800C30AC; // type:func size:0x18 (global, .text, src/libultra/libc/llcvt.c)
__ull_to_d                      = 0x800C30C4; // type:func size:0x34 (global, .text, src/libultra/libc/llcvt.c)
__ull_to_f                      = 0x800C30F8; // type:func size:0x30 (global, .text, src/libultra/libc/llcvt.c)
guPerspectiveF                  = 0x800C3130; // type:func size:0x230 (global, .text, src/libultra/gu/perspective.c)
guPerspective                   = 0x800C3360; // type:func size:0x58 (global, .text, src/libultra/gu/perspective.c)
guLookAtF                       = 0x800C33C0; // type:func size:0x2B8 (global, .text, src/libultra/gu/lookat.c)
guLookAt                        = 0x800C3678; // type:func size:0x78 (global, .text, src/libultra/gu/lookat.c)
guLookAtReflectF                = 0x800C36F0; // type:func size:0x440 (global, .text, src/libultra/gu/lookatref.c)
guLookAtReflect                 = 0x800C3B30; // type:func size:0x78 (global, .text, src/libultra/gu/lookatref.c)
guMtxXFMF                       = 0x800C3BB0; // type:func size:0xA0 (global, .text, src/libultra/gu/mtxcatf.c)
guMtxCatF                       = 0x800C3C50; // type:func size:0x164 (global, .text, src/libultra/gu/mtxcatf.c)
sqrtf                           = 0x800C3DC0; // type:func size:0x8 (global, .text, src/libultra/gu/sqrtf.s)
__osDisableInt                  = 0x800C3DD0; // type:func size:0x20 (global, .text, asm/libultra/os/interrupt.s)
__osRestoreInt                  = 0x800C3DF0; // type:func size:0x1C (global, .text, asm/libultra/os/interrupt.s)
__osViInit                      = 0x800C3E10; // type:func size:0x13C (global, .text, src/libultra/io/vi.c)
__osSetSR                       = 0x800C3F50; // type:func size:0xC (global, .text, asm/libultra/os/setsr.s)
__osGetSR                       = 0x800C3F60; // type:func size:0xC (global, .text, asm/libultra/os/getsr.s)
__osSetFpcCsr                   = 0x800C3F70; // type:func size:0xC (global, .text, asm/libultra/os/setfpccsr.s)
__osSiRawReadIo                 = 0x800C3F80; // type:func size:0x50 (global, .text, src/libultra/io/sirawread.c)
__osSiRawWriteIo                = 0x800C3FD0; // type:func size:0x4C (global, .text, src/libultra/io/sirawwrite.c)
__osExceptionPreamble           = 0x800C4020; // type:func (global, .text, asm/libultra/io/exceptasm.s)
__osEnqueueAndYield             = 0x800C464C; // type:func (global, .text, asm/libultra/io/exceptasm.s)
__osEnqueueThread               = 0x800C474C; // type:func (global, .text, asm/libultra/io/exceptasm.s)
__osPopThread                   = 0x800C4794; // type:func (global, .text, asm/libultra/io/exceptasm.s)
__osDispatchThread              = 0x800C47A4; // type:func (global, .text, asm/libultra/io/exceptasm.s)
__osCleanupThread               = 0x800C4920; // type:func (global, .text, asm/libultra/io/exceptasm.s)
osWritebackDCache               = 0x800C4930; // type:func size:0x74 (global, .text, asm/libultra/os/writebackdcache.s)
osInvalICache                   = 0x800C49B0; // type:func size:0x74 (global, .text, asm/libultra/os/invalicache.s)
osMapTLBRdb                     = 0x800C4A30; // type:func size:0x58 (global, .text, asm/libultra/os/maptlbrdb.s)
osPiRawReadIo                   = 0x800C4A90; // type:func size:0x54 (global, .text, src/libultra/os/pirawread.c)
bzero                           = 0x800C4AF0; // type:func size:0x9C (global, .text, asm/libultra/libc/bzero.s)
__osDequeueThread               = 0x800C4B90; // type:func size:0x40 (global, .text, src/libultra/os/thread.c)
osCartRomInit                   = 0x800C4BD0; // type:func size:0xEC (global, .text, src/libultra/io/cartrominit.c)
osLeoDiskInit                   = 0x800C4CC0; // type:func size:0xF8 (global, .text, src/libultra/io/leodiskinit.c)
__osPiCreateAccessQueue         = 0x800C4DC0; // type:func size:0x50 (global, .text, src/libultra/io/piacs.c)
__osPiGetAccess                 = 0x800C4E10; // type:func size:0x44 (global, .text, src/libultra/io/piacs.c)
__osPiRelAccess                 = 0x800C4E54; // type:func size:0x2C (global, .text, src/libultra/io/piacs.c)
osGetThreadPri                  = 0x800C4E80; // type:func size:0x18 (global, .text, src/libultra/os/getthreadpri.c)
osPiRawStartDma                 = 0x800C4EA0; // type:func size:0xE0 (global, .text, src/libultra/io/pirawdma.c)
osEPiRawStartDma                = 0x800C4F80; // type:func size:0x224 (global, .text, src/libultra/io/epirawdma.c)
__osDevMgrMain                  = 0x800C51B0; // type:func size:0x474 (global, .text, src/libultra/io/devmgr.c)
osJamMesg                       = 0x800C5640; // type:func size:0x150 (global, .text, src/libultra/os/jammesg.c)
osPiGetCmdQueue                 = 0x800C5790; // type:func size:0x28 (global, .text, src/libultra/io/pigetcmdq.c)
osGetCount                      = 0x800C57C0; // type:func size:0xC (global, .text, asm/libultra/os/getcount.s)
__osTimerServicesInit           = 0x800C57D0; // type:func size:0x8C (global, .text, src/libultra/os/timerintr.c)
__osTimerInterrupt              = 0x800C585C; // type:func size:0x178 (global, .text, src/libultra/os/timerintr.c)
__osSetTimerIntr                = 0x800C59D4; // type:func size:0x74 (global, .text, src/libultra/os/timerintr.c)
__osInsertTimer                 = 0x800C5A48; // type:func size:0x188 (global, .text, src/libultra/os/timerintr.c)
__osViGetCurrentContext         = 0x800C5BD0; // type:func size:0xC (global, .text, src/libultra/io/vigetcurrcontext.c)
__osViSwapContext               = 0x800C5BE0; // type:func size:0x35C (global, .text, src/libultra/io/viswapcontext.c)
__osSpGetStatus                 = 0x800C5F40; // type:func size:0xC (global, .text, src/libultra/io/spgetstat.c)
bcopy                           = 0x800C5F50; // type:func size:0x304 (global, .text, asm/libultra/libc/bcopy.s)
__osSpSetStatus                 = 0x800C6260; // type:func size:0xC (global, .text, src/libultra/io/spsetstat.c)
__osSpSetPc                     = 0x800C6270; // type:func size:0x34 (global, .text, src/libultra/io/spsetpc.c)
__osSpRawStartDma               = 0x800C62B0; // type:func size:0x7C (global, .text, src/libultra/io/sprawdma.c)
__osSpDeviceBusy                = 0x800C6340; // type:func size:0x2C (global, .text, src/libultra/io/sp.c)
__osDpDeviceBusy                = 0x800C6370; // type:func size:0x2C (global, .text, src/libultra/io/dp.c)
__osSiCreateAccessQueue         = 0x800C63A0; // type:func size:0x50 (global, .text, src/libultra/io/siacs.c)
__osSiGetAccess                 = 0x800C63F0; // type:func size:0x44 (global, .text, src/libultra/io/siacs.c)
__osSiRelAccess                 = 0x800C6434; // type:func size:0x2C (global, .text, src/libultra/io/siacs.c)
__osSiRawStartDma               = 0x800C6460; // type:func size:0xAC (global, .text, src/libultra/io/sirawdma.c)
osSetTimer                      = 0x800C6510; // type:func size:0xE0 (global, .text, src/libultra/os/settimer.c)
__osPfsGetStatus                = 0x800C65F0; // type:func size:0x10C (global, .text, src/libultra/io/pfsgetstatus.c)
__osSumcalc                     = 0x800C6700; // type:func size:0x5C (global, .text, src/libultra/io/contpfs.c)
__osIdCheckSum                  = 0x800C675C; // type:func size:0x68 (global, .text, src/libultra/io/contpfs.c)
__osRepairPackId                = 0x800C67C4; // type:func size:0x418 (global, .text, src/libultra/io/contpfs.c)
__osCheckPackId                 = 0x800C6BDC; // type:func size:0x1A8 (global, .text, src/libultra/io/contpfs.c)
__osGetId                       = 0x800C6D74; // type:func size:0x25C (global, .text, src/libultra/io/contpfs.c)
__osCheckId                     = 0x800C6FD0; // type:func size:0xFC (global, .text, src/libultra/io/contpfs.c)
__osPfsRWInode                  = 0x800C70CC; // type:func size:0x320 (global, .text, src/libultra/io/contpfs.c)
__osPfsSelectBank               = 0x800C73EC; // type:func size:0x6C (global, .text, src/libultra/io/contpfs.c)
__osContRamRead                 = 0x800C7460; // type:func size:0x21C (global, .text, src/libultra/io/contramread.c)
__osPackRamReadData             = 0x800C767C; // type:func size:0x168 (local,. text, src/libultra/io/contramread.c)
osPfsChecker                    = 0x800C77F0; // type:func size:0x6C4 (global, .text, src/libultra/io/pfschecker.c)
corrupted_init                  = 0x800C7EB4; // type:func size:0x1B4 (global, .text, src/libultra/io/pfschecker.c)
corrupter                       = 0x800C8068; // type:func size:0x1E8 (global, .text, src/libultra/io/pfschecker.c)
osPfsIsPlug                     = 0x800C8250; // type:func size:0x1A0 (global, .text, src/libultra/io/pfsisplug.c)
__osPfsRequestData              = 0x800C83F0; // type:func size:0xFC (global, .text, src/libultra/io/pfsisplug.c)
__osPfsGetInitData              = 0x800C84EC; // type:func size:0xD0 (global, .text, src/libultra/io/pfsisplug.c)
__osContAddressCrc              = 0x800C85C0; // type:func size:0xB0 (global, .text, src/libultra/io/crc.c)
__osContDataCrc                 = 0x800C8670; // type:func size:0xD0 (global, .text, src/libultra/io/crc.c)
__osContRamWrite                = 0x800C8740; // type:func size:0x204 (global, .text, src/libultra/io/contramwrite.c)
__osPackRamWriteData            = 0x800C8944; // type:func size:0x17C (local, .text, src/libultra/io/contramwrite.c)
guMtxF2L                        = 0x800C8AC0; // type:func size:0x100 (global, .text, src/libultra/gu/mtxutil.c)
guMtxIdentF                     = 0x800C8BC0; // type:func size:0x84 (global, .text, src/libultra/gu/mtxutil.c)
guMtxIdent                      = 0x800C8C48; // type:func size:0x30 (global, .text, src/libultra/gu/mtxutil.c)
guMtxL2F                        = 0x800C8C78; // type:func size:0xB4 (global, .text, src/libultra/gu/mtxutil.c)
_Printf                         = 0x800C93A0; // type:func size:0x648 (global, .text, src/libultra/libc/xprintf.c)
guNormalize                     = 0x800C99F0; // type:func size:0x84 (global, .text, src/libultra/gu/normalize.c)
__osProbeTLB                    = 0x800C9A80; // type:func size:0xB8 (global, .text, asm/libultra/os/probetlb.s)
alSynDelete                     = 0x800C9B40; // type:func size:0x8 (global, .text, src/libultra/audio/syndelete.c)
alEvtqFlushType                 = 0x800C9B50; // type:func size:0xAC (global, .text, src/libultra/audio/event.c)
alEvtqFlush                     = 0x800C9BFC; // type:func size:0x70 (global, .text, src/libultra/audio/event.c)
alEvtqPostEvent                 = 0x800C9C6C; // type:func size:0x124 (global, .text, src/libultra/audio/event.c)
alEvtqNextEvent                 = 0x800C9D90; // type:func size:0x8C (global, .text, src/libultra/audio/event.c)
alEvtqNew                       = 0x800C9E1C; // type:func size:0x74 (global, .text, src/libultra/audio/event.c)
alSynAddPlayer                  = 0x800C9E90; // type:func size:0x50 (global, .text, src/libultra/audio/synaddplayer.c)
_allocatePVoice                 = 0x800C9EE0; // type:func size:0xE8 (global, .text, src/libultra/audio/synallocvoice.c)
alSynAllocVoice                 = 0x800C9FC8; // type:func size:0x150 (global, .text, src/libultra/audio/synallocvoice.c)
alSynStartVoice                 = 0x800CA110; // type:func size:0x8C (global, .text, src/libultra/audio/synstartvoice.c)
alSynSetPan                     = 0x800CA1A0; // type:func size:0x84 (global, .text, src/libultra/audio/synsetpan.c)
alSynSetVol                     = 0x800CA230; // type:func size:0x9C (global, .text, src/libultra/audio/synsetvol.c)
alSynSetPitch                   = 0x800CA2D0; // type:func size:0x84 (global, .text, src/libultra/audio/synsetpitch.c)
alSynSetFXMix                   = 0x800CA360; // type:func size:0x94 (global, .text, src/libultra/audio/synsetfxmix.c)
alSynStopVoice                  = 0x800CA400; // type:func size:0x78 (global, .text, src/libultra/audio/synstopvoice.c)
alSynFreeVoice                  = 0x800CA480; // type:func size:0xB0 (global, .text, src/libultra/audio/synfreevoice.c)
__setInstChanState              = 0x800CA530; // type:func size:0x54 (global, .text, src/libultra/audio/seqplayer.c)
__resetPerfChanState            = 0x800CA584; // type:func size:0x80 (global, .text, src/libultra/audio/seqplayer.c)
__initFromBank                  = 0x800CA604; // type:func size:0xB4 (global, .text, src/libultra/audio/seqplayer.c)
__vsDelta                       = 0x800CA6C0; // type:func size:0x24 (global, .text, src/libultra/audio/seqplayer.c)
__vsVol                         = 0x800CA6E4; // type:func size:0x88 (global, .text, src/libultra/audio/seqplayer.c)
__seqpReleaseVoice              = 0x800CA76C; // type:func size:0x12C (global, .text, src/libultra/audio/seqplayer.c)
__voiceNeedsNoteKill            = 0x800CA898; // type:func size:0xA8 (global, .text, src/libultra/audio/seqplayer.c)
__unmapVoice                    = 0x800CA940; // type:func size:0x70 (global, .text, src/libultra/audio/seqplayer.c)
__postNextSeqEvent              = 0x800CA9B0; // type:func size:0xDC (global, .text, src/libultra/audio/seqplayer.c)
__handleMetaMsg                 = 0x800CAA8C; // type:func size:0x78 (local, .text, src/libultra/audio/seqplayer.c)
__vsPan                         = 0x800CAB04; // type:func size:0x68 (global, .text, src/libultra/audio/seqplayer.c)
__lookupVoice                   = 0x800CAB4C; // type:func size:0x74 (global, .text, src/libultra/audio/seqplayer.c)
__mapVoice                      = 0x800CABC0; // type:func size:0x70 (global, .text, src/libultra/audio/seqplayer.c)
__lookupSoundQuick              = 0x800CAC30; // type:func size:0xFC (global, .text, src/libultra/audio/seqplayer.c)
__handleMIDIMsg                 = 0x800CAD2C; // type:func size:0x820 (local, .text, src/libultra/audio/seqplayer.c)
__seqpVoiceHandler              = 0x800CB54C; // type:func size:0x624 (local, .text, src/libultra/audio/seqplayer.c)
__seqpStopOsc                   = 0x800CBB70; // type:func size:0x104 (global, .text, src/libultra/audio/seqplayer.c)
__initChanState                 = 0x800CBC74; // type:func size:0x70 (global, .text, src/libultra/audio/seqplayer.c)
alSeqpNew                       = 0x800CBCE4; // type:func size:0x180 (global, .text, src/libultra/audio/seqplayer.c)
alCents2Ratio                   = 0x800CBE70; // type:func size:0x50 (global, .text, src/libultra/audio/cents2ratio.c)
alSynStartVoiceParams           = 0x800CBEC0; // type:func size:0xE4 (global, .text, src/libultra/audio/synstartvoiceparam.c)
alSaveNew                       = 0x800CBFB0; // type:func size:0x44 (global, .text, src/libultra/audio/drvrNew.c)
alMainBusNew                    = 0x800CBFF4; // type:func size:0x54 (global, .text, src/libultra/audio/drvrNew.c)
alAuxBusNew                     = 0x800CC048; // type:func size:0x54 (global, .text, src/libultra/audio/drvrNew.c)
alResampleNew                   = 0x800CC09C; // type:func size:0x88 (global, .text, src/libultra/audio/drvrNew.c)
alLoadNew                       = 0x800CC124; // type:func size:0xA8 (global, .text, src/libultra/audio/drvrNew.c)
alEnvmixerNew                   = 0x800CC1CC; // type:func size:0xA4 (global, .text, src/libultra/audio/drvrNew.c)
init_lpfilter                   = 0x800CC270; // type:func size:0xA0 (global, .text, src/libultra/audio/drvrNew.c)
alFxNew                         = 0x800CC310; // type:func size:0x43C (global, .text, src/libultra/audio/drvrNew.c)
alSynAllocFX                    = 0x800CC750; // type:func size:0x98 (global, .text, src/libultra/audio/synallocfx.c)
alMainBusParam                  = 0x800CC7F0; // type:func size:0x30 (global, .text, src/libultra/audio/mainbus.c)
alMainBusPull                   = 0x800CC820; // type:func size:0x120 (global, .text, src/libultra/audio/mainbus.c)
alLoadParam                     = 0x800CC940; // type:func size:0x1D4 (global, .text, src/libultra/audio/load.c)
alRaw16Pull                     = 0x800CCB14; // type:func size:0x3AC (global, .text, src/libultra/audio/load.c)
_decodeChunk                    = 0x800CCEC0; // type:func size:0x12C (local, .text, src/libultra/audio/load.c)
alAdpcmPull                     = 0x800CCFEC; // type:func size:0x4A0 (global, .text, src/libultra/audio/load.c)
alResampleParam                 = 0x800CD490; // type:func size:0xEC (global, .text, src/libultra/audio/resample.c)
alResamplePull                  = 0x800CD57C; // type:func size:0x208 (global, .text, src/libultra/audio/resample.c)
_ldexpf                         = 0x800CD790; // type:func size:0x28 (global, .text, src/libultra/audio/env.c)
_frexpf                         = 0x800CD7B8; // type:func size:0xEC (global, .text, src/libultra/audio/env.c)
alEnvmixerParam                 = 0x800CD8A4; // type:func size:0xE0 (global, .text, src/libultra/audio/env.c)
_getRate                        = 0x800CD984; // type:func size:0x1D0 (local, .text, src/libultra/audio/env.c)
_pullSubFrame                   = 0x800CDB54; // type:func size:0x298 (local, .text, src/libultra/audio/env.c)
_getVol                         = 0x800CDDEC; // type:func size:0xB0 (local, .text, src/libultra/audio/env.c)
alEnvmixerPull                  = 0x800CDE9C; // type:func size:0x558 (global, .text, src/libultra/audio/env.c)
alAuxBusParam                   = 0x800CE3F0; // type:func size:0x30 (global, .text, src/libultra/audio/auxbus.c)
alAuxBusPull                    = 0x800CE420; // type:func size:0xD8 (global, .text, src/libultra/audio/auxbus.c)
alSaveParam                     = 0x800CE500; // type:func size:0x34 (global, .text, src/libultra/audio/save.c)
alSavePull                      = 0x800CE534; // type:func size:0x8C (global, .text, src/libultra/audio/save.c)
__osAiDeviceBusy                = 0x800CE5C0; // type:func size:0x30 (global, .text, src/libultra/io/ai.c)
__osSiDeviceBusy                = 0x800CE5F0; // type:func size:0x2C (global, .text, src/libultra/io/si.c)
__osLeoInterrupt                = 0x800CE620; // type:func size:0x6A4 (global, .text, src/libultra/io/leointerrupt.c)
__osLeoAbnormalResume           = 0x800CECC4; // type:func size:0xE8 (local, .text, src/libultra/io/leointerrupt.c)
__osLeoResume                   = 0x800CEDAC; // type:func size:0xEC (local, .text, src/libultra/io/leointerrupt.c)
osDestroyThread                 = 0x800CEEA0; // type:func size:0xF8 (global, .text, src/libultra/os/destroythread.c)
__osResetGlobalIntMask          = 0x800CEFA0; // type:func size:0x58 (global, .text, src/libultra/os/resetglobalintmask.c)
osEPiRawWriteIo                 = 0x800CF000; // type:func size:0x4C (global, .text, src/libultra/io/epirawwrite.c)
osEPiRawReadIo                  = 0x800CF050; // type:func size:0x50 (global, .text, src/libultra/io/epirawread.c)
__osSetGlobalIntMask            = 0x800CF0A0; // type:func size:0x4C (global, .text, src/libultra/os/setglobalintmask.c)
__osSetCompare                  = 0x800CF0F0; // type:func size:0xC (global, .text, asm/libultra/os/setcompare.s)
osInvalDCache                   = 0x800CF100; // type:func size:0xAC (global, .text, asm/libultra/os/invaldcache.s)
_Litob                          = 0x800CF1B0; // type:func size:0x298 (global, .text, src/libultra/libc/xlibtob.c)
_Genld                          = 0x800CF450; // type:func size:0x568 (local, .text, src/libultra/libc/xlibtob.c)
_Ldtob                          = 0x800CF9C0; // type:func size:0x54C (global, .text, src/libultra/libc/xlibtob.c)
alCopy                          = 0x800CFF10; // type:func size:0x74 (global, .text, src/libultra/audio/copy.c)
alSeqGetLoc                     = 0x800CFF90; // type:func size:0x1C (global, .text, src/libultra/audio/seq.c)
alSeqSetLoc                     = 0x800CFFAC; // type:func size:0x1C (global, .text, src/libultra/audio/seq.c)
alSeqGetTicks                   = 0x800CFFC8; // type:func size:0x8 (global, .text, src/libultra/audio/seq.c)
readVarLen                      = 0x800CFFD8; // type:func size:0x48 (local, .text, src/libultra/audio/seq.c)
alSeqNextEvent                  = 0x800D0024; // type:func size:0x184 (global, .text, src/libultra/audio/seq.c)
alSeqNewMarker                  = 0x800D01A8; // type:func size:0x120 (global, .text, src/libultra/audio/seq.c)
alSeqSecToTicks                 = 0x800D02C8; // type:func size:0xE4 (global, .text, src/libultra/audio/seq.c)
alSeqTicksToSec                 = 0x800D03AC; // type:func size:0x54 (global, .text, src/libultra/audio/seq.c)
__alSeqNextDelta                = 0x800D0400; // type:func size:0x58 (global, .text, src/libultra/audio/seq.c)
read32                          = 0x800D0458; // type:func size:0x50 (local, .text, src/libultra/audio/seq.c)
read16                          = 0x800D04A8; // type:func size:0x30 (local, .text, src/libultra/audio/seq.c)
alSeqNew                        = 0x800D04D8; // type:func size:0xD8 (global, .text, src/libultra/audio/seq.c)
alSynSetPriority                = 0x800D05B0; // type:func size:0x10 (global, .text, src/libultra/audio/synsetpriority.c)
alFilterNew                     = 0x800D05C0; // type:func size:0x1C (global, .text, src/libultra/audio/filter.c)
_doModFunc                      = 0x800D05E0; // type:func size:0xA8 (global, .text, src/libultra/audio/filter.c)
_filterBuffer                   = 0x800D0688; // type:func size:0xB8 (global, .text, src/libultra/audio/filter.c)
_saveBuffer                     = 0x800D0740; // type:func size:0x188 (global, .text, src/libultra/audio/filter.c)
_loadBuffer                     = 0x800D08C8; // type:func size:0x18C (global, .text, src/libultra/audio/filter.c)
_loadOutputBuffer               = 0x800D0A54; // type:func size:0x224 (global, .text, src/libultra/audio/filter.c)
alFxParamHdl                    = 0x800D0C78; // type:func size:0x25C (global, .text, src/libultra/audio/filter.c)
alFxParam                       = 0x800D0ED4; // type:func size:0x18 (global, .text, src/libultra/audio/filter.c)
alFxPull                        = 0x800D0EEC; // type:func size:0x340 (global, .text, src/libultra/audio/filter.c)
lldiv                           = 0x800D1230; // type:func size:0x100 (global, .text, src/libultra/libc/ldiv.c)
ldiv                            = 0x800D1330; // type:func size:0x84 (global, .text, src/libultra/libc/ldiv.c)
sky_re                          = 0x800D36B0; // size:0x4 (global, .data, src/main.c)
sky_r                           = 0x800D36B4; // size:0x4 (global, .data, src/main.c)
sky_ge                          = 0x800D36B8; // size:0x4 (global, .data, src/main.c)
sky_g                           = 0x800D36BC; // size:0x4 (global, .data, src/main.c)
sky_be                          = 0x800D36C0; // size:0x4 (global, .data, src/main.c)
sky_b                           = 0x800D36C4; // size:0x4 (global, .data, src/main.c)
gamestate                       = 0x800D36C8; // size:0x1 (global, .data, src/main.c)
gfxtaskcreated                  = 0x800D36CC; // size:0x4 (global, .data, src/main.c)
D_800D36D0                      = 0x800D36D0; // size:0x20 (global, .data, src/main.c)
framecounter                    = 0x800D36F0; // size:0x4 (global, .data, src/main.c)
prevtime                        = 0x800D36F8; // size:0x8 (global, .data, src/main.c)
levelnum                        = 0x800D3750; // size:0x2
menu_levelnum                   = 0x800D3754; // size:0x2
do_restart                      = 0x800D377C; // size:0x1
dukematch_mode                  = 0x800D378C; // size:0x1
doinitrumble                    = 0x800D38B4; // size:0x1
viewhorizang                    = 0x800D9AE4; // size:0x4
death_fade                      = 0x800DA4A4; // size:0x1
weapon_sprites                  = 0x800DAFB0; // size:0x1E
cameradist                      = 0x800EE7D0; // size:0x4
cameraclock                     = 0x800EE7D4; // size:0x4
cachesize                       = 0x800EE7E0; // size:0x4 (local, .data, src/cache1d.c)
cachecount                      = 0x800EE7E4; // size:0x4 (global, .data, src/cache1d.c)
zerochar                        = 0x800EE7E8; // size:0x1 (global, .data, src/cache1d.c)
cachestart                      = 0x800EE7EC; // size:0x4 (global, .data, src/cache1d.c)
cacnum                          = 0x800EE7F0; // size:0x4 (global, .data, src/cache1d.c)
script                          = 0x800EE900; // size:0xD284
actorscrptr                     = 0x800FBB84; // size:0x3000
soundm                          = 0x800FF498; // size:0x12C
editstatus                      = 0x800FF600; // size:0x2 (global, .data, src/engine.c)
spritecount                     = 0x800FF604; // size:0x4 (global, .data, src/engine.c)
clipmoveboxtracenum             = 0x800FF608; // size:0x4 (global, .data, src/engine.c)
numenvsnds                      = 0x800FF610; // size:0x1
AmbienceToggle                  = 0x800FF614; // size:0x4
SoundToggle                     = 0x800FF618; // size:0x4
actor_tog                       = 0x800FF61C; // size:0x1
numplayers                      = 0x800FF624; // size:0x2
myconnectindex                  = 0x800FF628; // size:0x2
which_palookup                  = 0x800FF640; // size:0x2
haltsoundhack                   = 0x800FF650; // size:0x1 (global, .data, src/sector.c)
sintable                        = 0x800FF660; // size:0x1000 (global, .data, src/tables.c)
fta_quotes                      = 0x800FEB84; // size:0x20C
radarang                        = 0x80100660; // size:0xA00 (global, .data, src/tables.c)
fdmatrix                        = 0x80101060; // size:0x240 (local, .data, src/dukebot.c)
weaponsandammosprites           = 0x80101370; // size:0x1E
numinterpolations               = 0x80101390; // size:0x4
startofdynamicinterpolations    = 0x80101394; // size:0x4
game_inactive                   = 0x80101360; // size:0x1 (global, .data, src/menues.c)
osClockRate                     = 0x801013A0; // size:0x8 (global, .data, src/libultra/os/initialize.c)
osViClock                       = 0x801013A8; // size:0x4 (global, .data, src/libultra/os/initialize.c)
__osShutdown                    = 0x801013AC; // size:0x4 (global, .data, src/libultra/os/initialize.c)
__OSGlobalIntMask               = 0x801013B0; // size:0x4 (global, .data, src/libultra/os/initialize.c)
__osPiDevMgr                    = 0x801013C0; // size:0x1C (global, .data, src/libultra/io/pimgr.c)
__osPiTable                     = 0x801013DC; // size:0x4 (global, .data, src/libultra/io/pimgr.c)
__osCurrentHandle               = 0x801013E0; // size:0x8 (global, .data, src/libultra/io/pimgr.c)
__osViDevMgr                    = 0x801013F0; // size:0x1C (global, .data, src/libultra/io/vimgr.c)
osViModeTable                   = 0x80101410; // size:0xD20 (global, .data, src/libultra/io/vitbl.c)
__osContinitialized             = 0x80102130; // size:0x4 (global, .data, src/libultra/io/controller.c)
alGlobals                       = 0x80102140; // size:0x4 (global, .data, src/libultra/audio/sl.c)
vi                              = 0x80102160; // size:0x60 (local, .data, src/libultra/io/vi.c)
__osViCurr                      = 0x801021C0; // size:0x4 (global, .data, src/libultra/io/vi.c)
__osViNext                      = 0x801021C4; // size:0x4 (global, .data, src/libultra/io/vi.c)
__osThreadTail                  = 0x801021F0; // size:0x8 (global, .data, src/libultra/os/thread.c)
__osRunQueue                    = 0x801021F8; // size:0x4 (global, .data, src/libultra/os/thread.c)
__osActiveQueue                 = 0x801021FC; // size:0x4 (global, .data, src/libultra/os/thread.c)
__osRunningThread               = 0x80102200; // size:0x4 (global, .data, src/libultra/os/thread.c)
__osFaultedThread               = 0x80102204; // size:0x4 (global, .data, src/libultra/os/thread.c)
__osPiAccessQueueEnabled        = 0x80102210; // size:0x4 (global, .data, src/libultra/io/piacs.c)
__osTimerList                   = 0x80102220; // size:0x4 (global, .data, src/libultra/os/timerintr.c)
__osSiAccessQueueEnabled        = 0x80102230; // size:0x4 (global, .data, src/libultra/io/siacs.c)
spaces                          = 0x80102240; // size:0x21 (global, .data, src/libultra/src/xprintf.c)
zeroes                          = 0x80102264; // size:0x21 (global, .data, src/libultra/src/xprintf.c)
SMALLROOM_PARAMS                = 0x80102290; // size:0x68 (local, .data, src/libultra/audio/drvrNew.c)
BIGROOM_PARAMS                  = 0x801022F8; // size:0x88 (local, .data, src/libultra/audio/drvrNew.c)
ECHO_PARAMS                     = 0x80102380; // size:0x28 (local, .data, src/libultra/audio/drvrNew.c)
CHORUS_PARAMS                   = 0x801023A8; // size:0x28 (local, .data, src/libultra/audio/drvrNew.c)
FLANGE_PARAMS                   = 0x801023D0; // size:0x28 (local, .data, src/libultra/audio/drvrNew.c)
NULL_PARAMS                     = 0x801023F8; // size:0x28 (local, .data, src/libultra/audio/drvrNew.c)
eqpower                         = 0x80102420; // size:0x100 (local, .data, src/libultra/audio/env.c)
osViModePalLan1                 = 0x80102560; // size:0x50 (global, .data, src/libultra/io/vimodepallan1.c)
osViModeMpalLan1                = 0x801025B0; // size:0x50 (global, .data, src/libultra/io/vimodempallan1.c)
osViModeNtscLan1                = 0x80102600; // size:0x50 (global, .data, src/libultra/io/vimodentsclan1.c)
ldigs                           = 0x80102650; // size:0x14 (global, .data, src/libultra/libc/xlitob.c)
udigs                           = 0x80102664; // size:0x14 (global, .data, src/libultra/libc/xlitob.c)
__libm_qnan_f                   = 0x8010A110; // size:0x4 (global, .rodata, asm/gu/libm_vals.s)
pows                            = 0x8010A120; // size:0x48 (global, .rodata, src/libultra/libc/xldtob.c)
D_8010AC80                      = 0x8010AC80; // size:0x1 (global, .bss, src/main.c)
polygondata                     = 0x8010AC84; // size:0x4 (global, .bss, src/main.c)
D_8010AC88                      = 0x8010AC88; // size:0x4000 (global, .bss, src/main.c)
idleThread                      = 0x8010EC88; // size:0x1B0 (global, .bss, src/main.c)
D_8010EE38                      = 0x8010EE38; // size:0x4000 (global, .bss, src/main.c)
mainThread                      = 0x80112E38; // size:0x1B0 (global, .bss, src/main.c)
D_80112FE8                      = 0x80112FE8; // size:0x4000 (global, .bss, src/main.c)
contThread                      = 0x80116FE8; // size:0x1B0 (global, .bss, src/main.c)
D_80117198                      = 0x80117198; // size:0x4000 (global, .bss, src/main.c)
audioThread                     = 0x8011B198; // size:0x1B0 (global, .bss, src/main.c)
D_8011B348                      = 0x8011B348; // size:0x4000 (global, .bss, src/main.c)
scheduler                       = 0x8011F348; // size:0x284 (global, .bss, src/main.c)
D_8011F5D0                      = 0x8011F5D0; // size:0x4000 (global, .bss, src/main.c)
D_801235D0                      = 0x801235D0; // size:0x8 (global, .bss, src/main.c)
D_801235D8                      = 0x801235D8; // size:0x8 (global, .bss, src/main.c)
D_801235E0                      = 0x801235E0; // size:0x8 (global, .bss, src/main.c)
D_801235E8                      = 0x801235E8; // size:0x20 (global, .bss, src/main.c)
D_80123608                      = 0x80123608; // size:0x18 (global, .bss, src/main.c)
D_80123620                      = 0x80123620; // size:0x18 (global, .bss, src/main.c)
controllerthreadsync            = 0x80123638; // size:0x18 (global, .bss, src/main.c)
retraceMessageQ                 = 0x80123650; // size:0x18 (global, .bss, src/main.c)
contr_msqueue                   = 0x80123668; // size:0x18 (global, .bss, src/main.c)
D_80123680                      = 0x80123680; // size:0x18 (global, .bss, src/main.c)
D_80123698                      = 0x80123698; // size:0x18 (global, .bss, src/main.c)
D_801236B0                      = 0x801236B0; // size:0x20 (global, .bss, src/main.c)
D_801236D0                      = 0x801236D0; // size:0x4 (global, .bss, src/main.c)
D_801236D8                      = 0x801236D8; // size:0x20 (global, .bss, src/main.c)
D_801236F8                      = 0x801236F8; // size:0x20 (global, .bss, src/main.c)
D_80123718                      = 0x80123718; // size:0x20 (global, .bss, src/main.c)
D_80123738                      = 0x80123738; // size:0x4 (global, .bss, src/main.c)
D_80123740                      = 0x80123740; // size:0x18 (global, .bss, src/main.c)
gfxpool                         = 0x80123758; // size:0xA0C00 (global, .bss, src/main.c)
D_801C4358                      = 0x801C4358; // size:0xB0 (global, .bss, src/main.c)
clockfreq                       = 0x801C4408; // size:0x8 (global, .bss, src/main.c)
viewinfo                        = 0x801C4410; // size:0x4 (global, .bss, src/main.c)
paletteoffset                   = 0x801C4414; // size:0x4 (global, .bss, src/main.c)
pkt                             = 0x801C4418; // size:0x4 (global, .bss, src/main.c)
nowtime                         = 0x801C4420; // size:0x8 (global, .bss, src/main.c)
nowtime2                        = 0x801C4428; // size:0x8 (global, .bss, src/main.c)
D_801C4440                      = 0x801C4440; // size:0x400 (global, .bss, src/main.c)
D_801C4840                      = 0x801C4840; // size:0x900 (global, .bss, src/main.c)
control_button                  = 0x801C93B8; // size:0x8
control_stickx                  = 0x801C93C0; // size:0x8
control_sticky                  = 0x801C93C8; // size:0x8
controlmap                      = 0x801C93D0; // size:0x100
D_801C94D8                      = 0x801C94D8; // size:0x8
demo_stickx                     = 0x8021D64E; // size:0x2
demo_sticky                     = 0x8021D650; // size:0x2
demo_button                     = 0x8021D652; // size:0x2
sector                          = 0x8021E678; // size:0x7B30 (global, .bss, src/rend1.c)
wall                            = 0x802261A8; // size:0x20A00 (global, .bss, src/rend1.c)
sprite                          = 0x80246BA8; // size:0x157C0 (global, .bss, src/rend1.c)
cac                             = 0x8026EFE0; // size:0x3000 (global, .bss, src/cache1d.c)
lockrecip                       = 0x80271FE0; // size:0x320 (local, .bss, src/cache1d.c)
otherp                          = 0x80272300; // size:0x2 (global, .bss, src/actors1.c)
g_i                             = 0x80272310; // size:0x2 (local, .bss, src/gamedef.c)
g_p                             = 0x80272312; // size:0x2 (local, .bss, src/gamedef.c)
g_x                             = 0x80272314; // size:0x4 (local, .bss, src/gamedef.c)
g_t                             = 0x80272318; // size:0x4 (local, .bss, src/gamedef.c)
g_sp                            = 0x8027231C; // size:0x4 (local, .bss, src/gamedef.c)
insptr                          = 0x80272320; // size:0x4 (global, .bss, src/gamedef.c)
headspritesect                  = 0x80272330; // size:0x524 (global, .bss, src/engine.c)
headspritestat                  = 0x80272858; // size:0x802 (global, .bss, src/engine.c)
prevspritesect                  = 0x80273060; // size:0xFA0 (global, .bss, src/engine.c)
prevspritestat                  = 0x80274000; // size:0xFA0 (global, .bss, src/engine.c)
nextspritesect                  = 0x80274FA0; // size:0xFA0 (global, .bss, src/engine.c)
nextspritestat                  = 0x80275F40; // size:0xFA0 (global, .bss, src/engine.c)
rxi                             = 0x80276EE0; // size:0x20 (global, .bss, src/engine.c)
ryi                             = 0x80276F00; // size:0x20 (global, .bss, src/engine.c)
D_80276F20                      = 0x80276F20; // size:0x2 (global, .bss, src/engine.c)
clipnum                         = 0x80276F22; // size:0x2 (global, .bss, src/engine.c)
hitwalls                        = 0x80276F28; // size:0x8 (global, .bss, src/engine.c)
clipit                          = 0x80276F30; // size:0x2000 (global, .bss, src/engine.c)
clipsectorlist                  = 0x80278F30; // size:0x400 (global, .bss, src/engine.c)
clipsectnum                     = 0x80279330; // size:0x2 (global, .bss, src/engine.c)
clipobjectval                   = 0x80279338; // size:0x400 (global, .bss, src/engine.c)
totalclocklock                  = 0x80279738; // size:0x4 (global, .bss, src/engine.c)
tempwallptr                     = 0x80279740; // size:0x4
turnheldtime                    = 0x80279750; // size:0x4 (global, .bss, src/player1.c)
lastcontroltime                 = 0x80279754; // size:0x4 (global, .bss, src/player1.c)
D_80279758                      = 0x80279758; // size:0x4 (global, .bss, src/player1.c)
lastvisinc                      = 0x8027975C; // size:0x4 (global, .bss, src/player1.c)
fistsign                        = 0x80279760; // size:0x2 (global, .bss, src/player1.c)
stickx                          = 0x80279762; // size:0x2 (global, .bss, src/player1.c)
sticky                          = 0x80279764; // size:0x2 (global, .bss, src/player1.c)
buttonheld                      = 0x80279766; // size:0x2 (global, .bss, src/player1.c)
button_mode                     = 0x80279768; // size:0x2 (global, .bss, src/player1.c)
goalx                           = 0x80279770; // size:0x10 (local, .bss, src/dukebot.c)
goaly                           = 0x80279780; // size:0x10 (local, .bss, src/dukebot.c)
goalz                           = 0x80279790; // size:0x10 (local, .bss, src/dukebot.c)
goalsect                        = 0x802797A0; // size:0x10 (local, .bss, src/dukebot.c)
goalwall                        = 0x802797B0; // size:0x10 (local, .bss, src/dukebot.c)
goalsprite                      = 0x802797C0; // size:0x10 (local, .bss, src/dukebot.c)
goalplayer                      = 0x802797D0; // size:0x10 (local, .bss, src/dukebot.c)
clipmovecount                   = 0x802797E0; // size:0x10 (local, .bss, src/dukebot.c)
searchsect                      = 0x802797F0; // size:0x522 (global, .bss, src/dukebot.c)
searchparent                    = 0x80279D18; // size:0x522 (global, .bss, src/dukebot.c)
dashow2dsector                  = 0x8027A240; // size:0x53 (global, .bss, src/dukebot.c)
max_ammo_amount                 = 0x8027A3C0; // size:0x3C
hittype                         = 0x8027A400; // size:0x23280
spriteq                         = 0x8029D680; // size:0x80
msx                             = 0x8029D700; // size:0x1000
msy                             = 0x8029E700; // size:0x1000
cyclers                         = 0x8029F700; // size:0xC00
tempbuf                         = 0x802A0300; // size:0x800
Sound                           = 0x802A0B00; // size:0x12C0
SoundOwner                      = 0x802A1DC0; // size:0x3840
sync                            = 0x802A5600; // size:0x30
po                              = 0x802A5630; // size:0x140
ps                              = 0x802A5770; // size:0xE30
oldipos                         = 0x802A65A0; // size:0x1000
bakipos                         = 0x802A75A0; // size:0x1000
curipos                         = 0x802A85A0; // size:0x1000
frags                           = 0x802A95A0; // size:0x20
mirrorwall                      = 0x802A95C0; // size:0x80
mirrorsector                    = 0x802A9640; // size:0x80
animwall                        = 0x802A96C0; // size:0x1000
animateptr                      = 0x802AA6C0; // size:0x100
animategoal                     = 0x802AA7C0; // size:0x100
animatevel                      = 0x802AA8C0; // size:0x100
animatesect                     = 0x802AA9C0; // size:0x80
spriteqloc                      = 0x802AAA40; // size:0x2
global_random                   = 0x802AAA42; // size:0x2
neartagsector                   = 0x802AAA44; // size:0x2
neartagwall                     = 0x802AAA46; // size:0x2
neartagsprite                   = 0x802AAA48; // size:0x2
neartaghitdist                  = 0x802AAA4C; // size:0x4
lockclock                       = 0x802AAA50; // size:0x4
numanimwalls                    = 0x802AAA54; // size:0x2
animatecnt                      = 0x802AAA58; // size:0x4
numcyclers                      = 0x802AAA5C; // size:0x2
camsprite                       = 0x802AAA5E; // size:0x2
mirrorcnt                       = 0x802AAA60; // size:0x2
numplayersprites                = 0x802AAA62; // size:0x1
earthquaketime                  = 0x802AAA63; // size:0x1
ud                              = 0x802AAA68; // size:0x1A8
pus                             = 0x802AAC10; // size:0x1
pub                             = 0x802AAC11; // size:0x1
loc                             = 0x802AAC18; // size:0xC
screenpeek                      = 0x802AAC24; // size:0x2
vel                             = 0x802AAC28; // size:0x4
svel                            = 0x802AAC2C; // size:0x4
angvel                          = 0x802AAC30; // size:0x4
horiz                           = 0x802AAC34; // size:0x4
ototalclock                     = 0x802AAC38; // size:0x4
killit_flag                     = 0x802AAC3C; // size:0x1
display_mirror                  = 0x802AAC3D; // size:0x1
myx                             = 0x802AAC40; // size:0x4
omyx                            = 0x802AAC44; // size:0x4
myxvel                          = 0x802AAC48; // size:0x4
myy                             = 0x802AAC4C; // size:0x4
omyy                            = 0x802AAC50; // size:0x4
myyvel                          = 0x802AAC54; // size:0x4
myz                             = 0x802AAC58; // size:0x4
omyz                            = 0x802AAC5C; // size:0x4
myzvel                          = 0x802AAC60; // size:0x4
myhoriz                         = 0x802AAC64; // size:0x2
omyhoriz                        = 0x802AAC66; // size:0x2
myhorizoff                      = 0x802AAC68; // size:0x2
omyhorizoff                     = 0x802AAC6A; // size:0x2
myang                           = 0x802AAC6C; // size:0x2
omyang                          = 0x802AAC6E; // size:0x2
mycursectnum                    = 0x802AAC70; // size:0x2
myjumpingcounter                = 0x802AAC72; // size:0x2
myjumpingtoggle                 = 0x802AAC74; // size:0x1
myonground                      = 0x802AAC75; // size:0x1
myhardlanding                   = 0x802AAC76; // size:0x1
myreturntocenter                = 0x802AAC77; // size:0x1
everyothertime                  = 0x802AAC78; // size:0x1
xdim                            = 0x802AAC80; // size:0x4 (global, .bss, src/global2.c)
ydim                            = 0x802AAC84; // size:0x4 (global, .bss, src/global2.c)
numsectors                      = 0x802AAC88; // size:0x2 (global, .bss, src/global2.c)
numwalls                        = 0x802AAC8A; // size:0x2 (global, .bss, src/global2.c)
numsprites                      = 0x802AAC8C; // size:0x2 (global, .bss, src/global2.c)
totalclock                      = 0x802AAC90; // size:0x4 (global, .bss, src/global2.c)
randomseed                      = 0x802AAC98; // size:0x4 (global, .bss, src/global2.c)
__osFinalrom                    = 0x802AACA0; // size:0x4 (global, .bss, src/libultra/os/initialize.c)
piThread                        = 0x802AACB0; // size:0x1B0 (local, .bss, src/libultra/io/pimgr.c)
piThreadStack                   = 0x802AAE60; // size:0x1000 (local, .bss, src/libultra/io/pimgr.c)
piEventQueue                    = 0x802ABE60; // size:0x18 (local, .bss, src/libultra/io/pimgr.c)
piEventBuf                      = 0x802ABE78; // size:0x4 (local, .bss, src/libultra/io/pimgr.c)
viThread                        = 0x802ABE80; // size:0x1B0 (local, .bss, src/libultra/io/vimgr.c)
viThreadStack                   = 0x802AC030; // size:0x1000 (local, .bss, src/libultra/io/vimgr.c)
viEventQueue                    = 0x802AD030; // size:0x18 (local, .bss, src/libultra/io/vimgr.c)
viEventBuf                      = 0x802AD048; // size:0x14 (local, .bss, src/libultra/io/vimgr.c)
viRetraceMsg                    = 0x802AD060; // size:0x18 (local, .bss, src/libultra/io/vimgr.c)
viCounterMsg                    = 0x802AD078; // size:0x18 (local, .bss, src/libultra/io/vimgr.c)
__osEventStateTab               = 0x802AD0A0; // size:0x78 (local, .bss, src/libultra/os/seteventmesg.c)
tmp_task                        = 0x802AD120; // size:0x40 (local, .bss, src/libultra/io/sptask.c)
__osContPifRam                  = 0x802AD160; // size:0x40 (local, .bss, src/libultra/io/controller.c)
__osContLastCmd                 = 0x802AD1A0; // size:0x1 (local, .bss, src/libultra/io/controller.c)
__osMaxControllers              = 0x802AD1A1; // size:0x1 (local, .bss, src/libultra/io/controller.c)
__osEepromTimer                 = 0x802AD1A8; // size:0x20 (local, .bss, src/libultra/io/controller.c)
__osEepromTimerQ                = 0x802AD1C8; // size:0x18 (local, .bss, src/libultra/io/controller.c)
__osEepromTimerMsg              = 0x802AD1E0; // size:0x4 (local, .bss, src/libultra/io/controller.c)
_MotorStopData                  = 0x802AD1F0; // size:0x100 (global, .bss, src/libultra/io/motor.c)
_MotorStartData                 = 0x802AD2F0; // size:0x100 (global, .bss, src/libultra/io/motor.c)
_motorstopbuf                   = 0x802AD3F0; // size:0x20 (global, .bss, src/libultra/io/motor.c)
_motorstartbuf                  = 0x802AD410; // size:0x20 (global, .bss, src/libultra/io/motor.c)
piAccessBuf                     = 0x802AD540; // size:0x4 (local, .bss, src/libultra/io/piacs.c)
__osPiAccessQueue               = 0x802AD548; // size:0x18 (global, .bss, src/libultra/io/piacs.c)
CartRomHandle                   = 0x802AD440; // size:0x74 (global, .bss, src/libultra/io/cartrominit.c)
LeoDiskHandle                   = 0x802AD4C0; // size:0x74 (global, .bss, src/libultra/io/leorominit.c)
__osDiskHandle                  = 0x802AD534; // size:0x4 (global, .bss, src/libultra/io/leorominit.c)
__osBaseTimer                   = 0x802AD560; // size:0x20 (global, .bss, src/libultra/os/timerintr.c)
__osCurrentTime                 = 0x802AD580; // size:0x8 (global, .bss, src/libultra/os/timerintr.c)
__osBaseCounter                 = 0x802AD588; // size:0x4 (global, .bss, src/libultra/os/timerintr.c)
__osViIntrCount                 = 0x802AD58C; // size:0x4 (global, .bss, src/libultra/os/timerintr.c)
__osTimerCounter                = 0x802AD590; // size:0x4 (global, .bss, src/libultra/os/timerintr.c)
siAccessBuf                     = 0x802AD5A0; // size:0x4 (local, .bss, src/libultra/io/siacs.c)
__osSiAccessQueue               = 0x802AD5A8; // size:0x18 (local, .bss, src/libultra/io/siacs.c)
__osPfsPifRam                   = 0x802AD5C0; // size:0x40 (local, .bss, src/libultra/io/pfsisplug.c)
__osThreadSave                  = 0x802AD600; // size:0x1B0 (global, .bss, src/libultra/os/kdebugserver.c)
leoDiskStack                    = 0x802AD7B0; // size:0x1000 (global, .bss, src/libultra/os/leointerrupt.c)